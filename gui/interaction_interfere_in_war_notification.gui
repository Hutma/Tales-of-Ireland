######################################################
#################### TITLE VIEW ######################
######################################################

window = {
	gfxtype = windowgfx
	name = "interfere_in_war_interaction_notification_window"
	parentanchor = center
	position = { 0 40 }
	size = { 650 700 }
	layer = windows_layer

	using = Window_Background
	using = Window_Decoration_Spike

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		using = Sound_WindowShow_Standard
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		using = Sound_WindowHide_Standard
	}

	vbox = {
		using = Window_Margins
		spacing = 10
		restrictparent_min = yes

		header_pattern_interaction = {
			layoutpolicy_horizontal = expanding
			
			blockoverride "header_text"
			{
				text = "[CharacterInteractionNotificationWindow.GetContextName]"
			}

			blockoverride "button_close"
			{
				onclick = "[CharacterInteractionNotificationWindow.Close]"
			}
		}

		hbox = {
			layoutpolicy_horizontal = expanding

			portrait_shoulders = {
				name = "sender_portrait"
				datacontext = "[CharacterInteractionNotificationWindow.GetSender]"
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				text_multi = {
					name = "description"
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					margin = { 5 15 }
					text = "[CharacterInteractionNotificationWindow.GetNotificationText]"
					using = Font_Size_Medium
				}

				flowcontainer = {
					name = "signature"
					direction = vertical
					margin_left = 150
					margin_right = 30
					margin_bottom = 10

					text_single = {
						name = "signed_text"
						text = "[CharacterInteractionNotificationWindow.GetSigned]"
					}

					text_single = {
						name = "signature"
						text = "[CharacterInteractionNotificationWindow.GetSignature]"
					}
				}
			}
		}

		flowcontainer = {
			name = "window_content"
			direction = vertical
			margin = { 30 0 }
			margin_top = 100
			margin_bottom = 30
			spacing = 10

			flowcontainer = {
				name = "war_info"
				direction = vertical

				container = {
					text_single = {
						position = { 20 0 }
						name = "allies_label"
						block "war_side_label" {
						}
					}

					portrait_head = {
						name = "primary_ally"
						position = { 20 -15 }
						block "war_side_primary_character" {
						}
					}

					fixedgridbox = {
						name = "secondary_allies_grid"
						position = { 100 20 }
						addcolumn = 50
						addrow = 100
						block "war_side_secondary_characters" {
						}
						flipdirection = yes

						item = {
							portrait_head = {
								name = "character_button"
								position = { 0 -5 }
							}
						}
					}

					name = "allies"
					blockoverride "war_side_label" {
						text = "WAR_ALLIES"
					}
					blockoverride "war_side_primary_character" {
						datacontext = "[InterfereInWarInteractionNotificationWindow.GetPrimaryAlly]"
					}
					blockoverride "war_side_secondary_characters" {
						datamodel = "[InterfereInWarInteractionNotificationWindow.GetSecondaryAllies]"
					}
				}
				container = {
					text_single = {
						position = { 20 0 }
						name = "allies_label"
						multiline = no
						autoresize = yes
						block "war_side_label" {
						}
					}

					portrait_head = {
						name = "primary_ally"
						position = { 20 -15 }
						block "war_side_primary_character" {
						}
					}

					fixedgridbox = {
						name = "secondary_allies_grid"
						position = { 100 20 }
						addcolumn = 50
						addrow = 100
						block "war_side_secondary_characters" {
						}
						flipdirection = yes

						item = {
							portrait_head = {
								name = "character_button"
								position = { 0 -5 }
							}
						}
					}

					name = "enemies"
					blockoverride "war_side_label" {
						text = "WAR_ENEMIES"
					}
					blockoverride "war_side_primary_character" {
						datacontext = "[InterfereInWarInteractionNotificationWindow.GetPrimaryEnemy]"
					}
					blockoverride "war_side_secondary_characters" {
						datamodel = "[InterfereInWarInteractionNotificationWindow.GetSecondaryEnemies]"
					}
				}
			}

			flowcontainer = {
				name = "reject_effects_area"
				visible = "[InterfereInWarInteractionNotificationWindow.HasRejectEffectDescription]"
				direction = vertical
				margin_left = 20

				text_single = {
					name = "reject_effects_header"
					multiline = no
					text = "INTERFERE_IN_WAR_REJECT_HEADER"
				}
				text_single = {
					name = "reject_effects_body"
					multiline = yes
					text = "[InterfereInWarInteractionNotificationWindow.GetRejectEffectDescription]"
				}
			}

			container = {
				name = "answer_area"

				button_standard = {
					name = "reject_button"
					position = { 20 0 }
					text = "[CharacterInteractionNotificationWindow.GetAnswerRejectText]"
					align = center|nobaseline
					onclick = "[CharacterInteractionNotificationWindow.Reject]"
					enabled = "[CharacterInteractionNotificationWindow.CanReject]"
				}

				button_primary = {
					name = "accept_button"
					position = { 300 0 }
					text = "[CharacterInteractionNotificationWindow.GetAnswerAcceptText]"
					align = center|nobaseline
					onclick = "[CharacterInteractionNotificationWindow.Accept]"
					enabled = "[CharacterInteractionNotificationWindow.CanAccept]"
				}
			}
		}
	}
}