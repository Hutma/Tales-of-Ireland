MountedWarriorTerm = {
	type = character

	#Faris for muslims

	text = {
		localization_key = knight
	}
}


MountedWarriorTermPlural = {
	type = character

	#Faris for muslims

	text = {
		localization_key = knights
	}
}


MountedWarriorAdjective = {
	type = character

	#Faris for muslims

	text = {
		localization_key = knightly
	}
}

MartialTournamentAdjective = {
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_feudal
			capital_province = {
				geographical_region = world_europe_west
			}
		}
		localization_key = tournament_jousting
	}
	text = {
		trigger = {
			OR = {		
				government_has_flag = government_is_tribal
				faith = {
					has_doctrine = pagan_hostility_doctrine
				}
				capital_province = {
					geographical_region = world_europe_north
				}
			}
		}
		localization_key = tournament_wrestling
	}
	text = {
		trigger = {
			always = no
		}
		localization_key = tournament_sparring
		fallback = yes
	}
}

LevyMenWomen = {
	type = character

	#Gender law triggers

	text = {
		localization_key = levies_men
	}

	text = {
		localization_key = levies_women
	}

	text = {
		localization_key = levies_people
	}
}

FortifiedBuilding = { #Castle, Fort, Kasbah etc.
	type = character

	text = {
		localization_key = castle
		fallback = yes
	}
}

ResidenceBuilding = { #Castle, Palace, etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_republic
		}
		localization_key = mansion
	}

	text = {
		trigger = {
			OR = {
				government_has_flag = government_is_theocracy
				is_theocratic_lessee = yes
			}
		}
		localization_key = temple
	}

	text = {
		trigger = {
			NOR = {
				government_has_flag = government_is_republic
				government_has_flag = government_is_theocracy
				is_theocratic_lessee = yes
			}
		}
		localization_key = castle
		fallback = yes
	}
}

ResidenceBuildingPlural = { #Castles, Palaces, etc.
	type = character

	text = {
		trigger = {
			government_has_flag = government_is_republic
		}
		localization_key = mansions
	}

	text = {
		trigger = {
			OR = {
				government_has_flag = government_is_theocracy
				is_theocratic_lessee = yes
			}
		}
		localization_key = temples
	}

	text = {
		trigger = {
			NOR = {
				government_has_flag = government_is_republic
				government_has_flag = government_is_theocracy
				is_theocratic_lessee = yes
			}
		}
		localization_key = castles
		fallback = yes
	}
}


OutdoorsHidingPlace = { #Something you can find in nature / by the road
	type = character

	text = {
		localization_key = trees
	}

	text = {
		localization_key = rocks
	}
}

ObjectToClimb = {
	type = character

	text = {	
		trigger = { location = { terrain = desert } }
		localization_key = sand_dune
	}
	text = {	
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = mountains
					terrain = desert_mountains
					terrain = drylands
					terrain = steppe
				}
			}
		}
		localization_key = boulder
	}
	text = {	
		localization_key = tree
	}
}

IndefiniteBodyOfWater = { #Lake, River, Oasis, etc.
	type = character
	random_valid = yes

	text = {
		trigger = {
			location = { terrain = oasis }
		}
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = {
			location = { is_coastal = yes }
		}
		localization_key = body_of_water_the_ocean
	}
	text = {
		trigger = {
			location = { is_riverside_province = yes }
		}
		localization_key = body_of_water_a_river
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = farmlands
					terrain = jungle
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_large_pond
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = floodplains
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_lagoon
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = hills
					terrain = forest
					terrain = taiga
					terrain = steppe
				}
			}
		}
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

# As above, but excluding rivers'n'seas.
IndefiniteBodyOfWater_Static = {
	type = character
	random_valid = yes

	text = {
		trigger = {
			location = { terrain = oasis }
		}
		localization_key = body_of_water_an_oasis
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = farmlands
					terrain = jungle
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_large_pond
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = floodplains
					terrain = wetlands
				}
			}
		}
		localization_key = body_of_water_a_lagoon
	}
	text = {
		trigger = {
			location = {
				OR = {
					terrain = plains
					terrain = hills
					terrain = forest
					terrain = taiga
					terrain = steppe
				}
			}
		}
		localization_key = body_of_water_a_lake
	}
	text = {
		trigger = { always = no }
		# For the areas with no good source of water.
		fallback = yes
		localization_key = body_of_water_a_watering_hole
	}
}

RandomExampleName = {
	type = character

	text = {
		localization_key = random_example_name_default
	}
}

TerrainTypeCountyScope = {
	type = landed_title

	text = {	
		trigger = { title_province = { terrain = plains } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { title_province = { terrain = farmlands } }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { title_province = { terrain = hills } }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			title_province = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { title_province = { terrain = desert } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { title_province = { terrain = oasis } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { title_province = { terrain = jungle } }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { title_province = { terrain = forest } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { title_province = { terrain = taiga } }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { title_province = { terrain = wetlands } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { title_province = { terrain = steppe } }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { title_province = { terrain = floodplains } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { title_province = { terrain = drylands } }
		localization_key = terrain_drylands
	}
}

TerrainType = {
	type = character

	text = {	
		trigger = { location = { terrain = plains } }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { location = { terrain = farmlands } }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { location = { terrain = hills } }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			location = {
				OR = {
					terrain = mountains
					terrain = desert_mountains
				}
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { location = { terrain = desert } }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { location = { terrain = oasis } }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { location = { terrain = jungle } }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { location = { terrain = forest } }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { location = { terrain = taiga } }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { location = { terrain = wetlands } }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { location = { terrain = steppe } }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { location = { terrain = floodplains } }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { location = { terrain = drylands } }
		localization_key = terrain_drylands
	}
}

TerrainTypeProvince = {
	type = province

	text = {	
		trigger = { terrain = plains }
		localization_key = terrain_plains
	}

	text = {	
		trigger = { terrain = farmlands }
		localization_key = terrain_farmlands
	}

	text = {	
		trigger = { terrain = hills }
		localization_key = terrain_hills
	}

	text = {	
		trigger = {
			OR = {
				terrain = mountains
				terrain = desert_mountains
			}
		}
		localization_key = terrain_mountains
	}

	text = {	
		trigger = { terrain = desert }
		localization_key = terrain_desert
	}

	text = {	
		trigger = { terrain = oasis }
		localization_key = terrain_oasis
	}

	text = {	
		trigger = { terrain = jungle }
		localization_key = terrain_jungle
	}

	text = {	
		trigger = { terrain = forest }
		localization_key = terrain_forest
	}

	text = {	
		trigger = { terrain = taiga }
		localization_key = terrain_taiga
	}

	text = {	
		trigger = { terrain = wetlands }
		localization_key = terrain_wetlands
	}

	text = {	
		trigger = { terrain = steppe }
		localization_key = terrain_steppe
	}

	text = {	
		trigger = { terrain = floodplains }
		localization_key = terrain_floodplains
	}

	text = {	
		trigger = { terrain = drylands }
		localization_key = terrain_drylands
	}
}

Abortifacient = {
	type = character

	random_valid = yes

	text = {
		localization_key = abortifacient_pennyroyal
		weight_multiplier = {
			base = 3
		}
		#Europe, North Africa, Middle East
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_asia_minor
					geographical_region = world_middle_east
					geographical_region = world_africa_north
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_catmint
		#Europe, Asia, Africa
		trigger = { always = yes }
	}

	text = {
		localization_key = abortifacient_thymbra
		#North Africa, Southern Europe, Middle East, Central Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe_south
					geographical_region = world_asia_minor
					geographical_region = world_middle_east
					geographical_region = world_steppe
					geographical_region = world_africa_north
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_broadleaf_sage
		#Mediterranean
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe_south
					geographical_region = world_asia_minor
					geographical_region = world_africa_north
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_soapwort
		#Europe and Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_steppe
					geographical_region = world_middle_east
					geographical_region = world_india
					geographical_region = world_tibet
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_galingales
		#Africa, Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_africa
					geographical_region = world_steppe
					geographical_region = world_middle_east
					geographical_region = world_india
					geographical_region = world_tibet
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_bishops_lace
		#Christian only
		#Europe and Southwest Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_asia_minor
					geographical_region = world_middle_east
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_wild_carrot
		#Same as Bishop's Lace
		#Europe and Southwest Asia
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_asia_minor
					geographical_region = world_middle_east
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_bitter_melon
		#India
		trigger = {
			location = { geographical_region = world_india }
		}
	}

	text = {
		localization_key = abortifacient_nutmeg
		#India
		trigger = {
			location = { geographical_region = world_india }
		}
	}

	text = {
		localization_key = abortifacient_saffron
		#India
		trigger = {
			location = { geographical_region = world_india }
		}
	}

	text = {
		localization_key = abortifacient_vervain
		#Europe
		trigger = {
			location = { geographical_region = world_europe }
		}
	}

	#text = {
	#	localization_key = abortifacient_mugwort
	#	#lesser chance in Europe, rest of Asia
	#}

	text = {
		localization_key = abortifacient_herb_of_grace
		#Christian only
		#Balkans, Anatolia, Mediterranean
		trigger = {
			religion = religion:christianity_religion
			location = {
				OR = {
					geographical_region = world_europe_south
					geographical_region = world_africa_north
					geographical_region = world_asia_minor
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_rue
		#Same as herb-of-grace
		#Balkans, Anatolia, Mediterranean
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe_south
					geographical_region = world_africa_north
					geographical_region = world_asia_minor
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_tansy
		#Europe, Mediterranean
		trigger = {
			location = {
				OR = {
					geographical_region = world_europe
					geographical_region = world_africa_north
					geographical_region = world_asia_minor
				}
			}
		}
	}

	text = {
		localization_key = abortifacient_ergot
		weight_multiplier = {
			base = 3
		}
		#Europe
		trigger = {
			location = { geographical_region = world_europe }
		}
	}
}


#Various Venomous Creatures
VenomousCreature = {
	type = character

	text = {
		localization_key = venomous_creature_rare_spider
		trigger = {
			scope:venomous_creature = flag:rare_spider #Not Northern Europe or the Steppes
		}
	}

	text = {
		localization_key = venomous_creature_deathstalker
		trigger = {
			scope:venomous_creature = flag:deathstalker #North Africa or Middle East
		}
	}

	text = {
		localization_key = venomous_creature_red_scorpion
		trigger = {
			scope:venomous_creature = flag:red_scorpion #India, Nepal
		}
	}

	text = {
		localization_key = venomous_creature_fat_tail
		trigger = {
			scope:venomous_creature = flag:fat_tail #Arabia, Middle East, Egypt
		}
	}

	text = {
		localization_key = venomous_creature_viper
		trigger = {
			scope:venomous_creature = flag:viper #Northern and Eastern Europe
		}
	}

	text = {
		localization_key = venomous_creature_mamba
		trigger = {
			scope:venomous_creature = flag:mamba #Sub-saharan Africa
		}
	}

	text = {
		localization_key = venomous_creature_boomslang
		trigger = {
			scope:venomous_creature = flag:boomslang #Sub-saharan Africa
		}
	}

	text = {
		localization_key = venomous_creature_king_cobra
		trigger = {
			scope:venomous_creature = flag:king_cobra #South-east Asia + India
		}
	}

	text = {
		localization_key = venomous_creature_daboia
		trigger = {
			scope:venomous_creature = flag:daboia #India
		}
	}

	text = {
		localization_key = venomous_creature_saw_scale
		trigger = {
			scope:venomous_creature = flag:saw_scale #North Africa, Middle East, Pakistan, India
		}
	}

	text = {
		localization_key = venomous_creature_krait
		trigger = {
			scope:venomous_creature = flag:krait #North Africa, Middle East, Pakistan, India
		}
	}

	text = {
		localization_key = venomous_creature_beaked_mammal
		trigger = {
			scope:venomous_creature = flag:beaked_mammal #Australia
		}
	}

	text = {
		localization_key = venomous_creature_snake
		trigger = {
			always = no
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureType = {
	type = character

	text = {
		localization_key = venomous_creature_scorpion
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
			}
		}
	}
	text = {
		localization_key = venomous_creature_spider
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_thing
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_snake
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureTypePlural = {
	type = character

	text = {
		localization_key = venomous_creature_scorpion_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
			}
		}
	}
	text = {
		localization_key = venomous_creature_spider_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_thing_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_snake_plural
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
		fallback = yes
	}
}

#VenomousCreatureType
VenomousCreatureAttack = {
	type = character

	text = {
		localization_key = venomous_creature_sting
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_bite
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
}

#VenomousCreatureAttackPlural
VenomousCreatureAttackPlural = {
	type = character

	text = {
		localization_key = venomous_creature_stings
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
	text = {
		localization_key = venomous_creature_bites
		trigger = {
			OR = {
				scope:venomous_creature = flag:rare_spider
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
}

VenomousCreatureMovement = {
	type = character

	text = {
		localization_key = venomous_creature_scutter
		trigger = {
			OR = {
				scope:venomous_creature = flag:red_scorpion
				scope:venomous_creature = flag:deathstalker
				scope:venomous_creature = flag:fat_tail
				scope:venomous_creature = flag:rare_spider
			}
		}
	}
	text = {
		localization_key = venomous_creature_slither
		trigger = {
			OR = {
				scope:venomous_creature = flag:viper
				scope:venomous_creature = flag:mamba
				scope:venomous_creature = flag:boomslang
				scope:venomous_creature = flag:king_cobra
				scope:venomous_creature = flag:daboia
				scope:venomous_creature = flag:saw_scale
				scope:venomous_creature = flag:krait
			}
		}
	}
	text = {
		localization_key = venomous_creature_scamper
		trigger = {
			OR = {
				scope:venomous_creature = flag:beaked_mammal
			}
		}
	}
}


RandomReligiousTextName = {
	type = character

	text = {
		trigger = {
			scope:religious_book_title = flag:golden_legend
		}
		localization_key = random_religious_text_golden_legend
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:city_of_god
		}
		localization_key = random_religious_text_city_of_god
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:summa_theologica
		}
		localization_key = random_religious_text_summa_theologica
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:sic_et_non
		}
		localization_key = random_religious_text_sic_et_non
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:the_small_book_on_theism
		}
		localization_key = random_religious_text_the_small_book_on_theism
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:modern_philosophy
		}
		localization_key = random_religious_text_modern_philosophy
	}

	text = {
		trigger = {
			scope:religious_book_title = flag:stories_from_holy_book
		}
		localization_key = random_religious_text_stories_from_holy_book
	}
}


RandomEntertainmentTextName = {
	type = character

	text = {
		trigger = {
			scope:entertainment_book_title = flag:beowulf
		}
		localization_key = random_entertainment_text_beowulf
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:niebelungenlied
		}
		localization_key = random_entertainment_text_niebelungenlied
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:song_of_roland
		}
		localization_key = random_entertainment_text_song_of_roland
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:mabinogi
		}
		localization_key = random_entertainment_text_mabinogi
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_jerusalem
		}
		localization_key = random_entertainment_text_travels_to_jerusalem
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:east_of_indus
		}
		localization_key = random_entertainment_text_east_of_indus
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:travels_to_byzantium
		}
		localization_key = random_entertainment_text_travels_to_byzantium
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:digenes_akrites
		}
		localization_key = random_entertainment_text_digenes_akrites
	}

	text = {
		trigger = {
			scope:entertainment_book_title = flag:riddle_poems
		}
		localization_key = random_entertainment_text_riddle_poems
	}
}


RandomInformativeTextName = {
	type = character

	text = {
		trigger = {
			scope:informative_book_title = flag:on_the_judgement_of_the_stars
		}
		localization_key = random_informative_text_on_the_judgement_of_the_stars
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:the_perfect_state
		}
		localization_key = random_informative_text_the_perfect_state
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:spiritual_medicine
		}
		localization_key = random_informative_text_spiritual_medicine
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:trotula
		}
		localization_key = random_informative_text_trotula
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:the_improvement_of_the_moral_qualities
		}
		localization_key = random_informative_text_the_improvement_of_the_moral_qualities
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:armes_prydein
		}
		localization_key = random_informative_text_armes_prydein
	}

	text = {
		trigger = {
			scope:informative_book_title = flag:almagest
		}
		localization_key = random_informative_text_almagest
	}
}


MusicalPerformer = {
	type = character
	random_valid = yes

	text = {
		#Latin
		localization_key = music_performer_troubadour
	}
}


MusicalPerformerPossessive = {
	type = character
	random_valid = yes

	text = {
		#Latin
		localization_key = music_performer_troubadour_possessive
	}
}

#NOTE! All of these nouns should work with "a" (not "an")
RegionalGameObject = {
	type = character
	random_valid = yes

	text = {
		localization_key = deck_of_cards
	}

	text = {
		trigger = {
			location = {
				geographical_region = world_india
			}
		}
		localization_key = pachisi_board #indian
	}

	text = {
		localization_key = chess_set
	}
}

CulturalCurse = {
	type = character
	random_valid = yes

	text = {
		localization_key = wine
	}

	text = {
		localization_key = mead
	}
	text = {
		localization_key = expensive_drink_spiced_wine
	}
	text = {
		localization_key = tea
	}
}

RegionalAlcoholicDrink = {
	type = character
	random_valid = yes

	text = {
		localization_key = wine
	}

	text = {
		localization_key = mead
	}
}

#NOTE! All of these nouns should work with "a" (not "an")
RegionalGameObject = {
	type = character
	random_valid = yes

	text = {
		localization_key = deck_of_cards
	}
	text = {
		localization_key = chess_set
	}
}

CulturalCurse = {
	type = character
	random_valid = yes

	#Fallback (english)
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = curse_curses
	}
	text = {
		trigger = { always = no }
		fallback = yes
		localization_key = curse_shit
	}

}