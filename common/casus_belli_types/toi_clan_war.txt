clan_subjugation_cb = {
	icon = vassalization
	group = subjugation

	allowed_for_character = {
		exists = scope:attacker.dynasty
		scope:attacker.dynasty.dynast = scope:attacker
		scope:attacker.dynasty = {
			has_dynasty_modifier = clannic_dynasty
		}
		scope:attacker.dynasty = {
			exists = var:clan_unity_value
		}
		scope:attacker.dynasty = {
			var:clan_unity_value > 85
		}
	}
	
	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	allowed_against_character_display_regardless = {
		scope:attacker = {
			prestige_level >= 2
		}
	}
	
	allowed_against_character = {
		scope:defender = {
			is_independent_ruler = yes
			NOR = { # Can't subjugate holy orders or Heads of Faith
				any_held_title = {
					is_holy_order = yes
				}
				AND = {
					exists = faith.religious_head
					faith.religious_head = root
				}
			}
			dynasty = scope:attacker.dynasty
		}
	}
	
	cost = {
		prestige = {
			value = 250
			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}
		}
	}
	
	should_invalidate = {
		scope:defender = {
			is_independent_ruler = no
		}
	}
	
	on_declaration = {
		on_declared_war = yes
		custom_description = {
			text = down_clan_value_by_fifteen
			scope:attacker.dynasty = {
				if = {
					limit = { exists = var:clan_unity_value }
					change_variable = {
						name = clan_unity_value
						add = -15
					}
				}
			}
		}
	}	
	
	on_invalidated_desc = msg_subjugation_war_invalidated_message
	
	on_invalidated = {
		
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender.primary_title.tier < scope:attacker.primary_title.tier }
				desc = {
					first_valid = {
						triggered_desc = {
							trigger = { scope:attacker = { is_local_player = yes } }
							desc = vassalization_cb_victory_desc_attacker
						}
						triggered_desc = {
							trigger = { scope:defender = { is_local_player = yes } }
							desc = vassalization_cb_victory_desc_defender
						}
						desc = vassalization_cb_victory_desc
					}
				}
			}
			desc = {			
				first_valid = {
					triggered_desc = {
						trigger = { scope:attacker = { is_local_player = yes } }
						desc = tribal_subjugation_cb_victory_desc_equal_tier_attacker
					}
					triggered_desc = {
						trigger = { scope:defender = { is_local_player = yes } }
						desc = tribal_subjugation_cb_victory_desc_equal_tier_defender
					}
					desc = tribal_subjugation_cb_victory_desc_equal_tier
				}
			}
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		
		if = {
			limit = {
				scope:defender.primary_title.tier < scope:attacker.primary_title.tier
			}
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}
		else = {
			scope:defender = {
				every_held_title = {
					if = {
						limit = {
							tier = scope:defender.primary_title.tier
						}
						change_title_holder = {
							holder = scope:attacker
							change = scope:change
						}
					}
					else_if = {
						limit = {
							OR = {
								NOT = { exists = scope:secondary_title }
								tier > scope:secondary_title.tier
							}
						}
						save_temporary_scope_as = secondary_title
					}
				}
			}
			
			scope:defender = {
				if = {
					limit = {
						exists = scope:secondary_title
					}
					every_vassal = {
						limit = {
							primary_title.tier >= scope:secondary_title.tier
							NOT = {
								primary_title.tier = tier_barony
							}
						}
						change_liege = {
							liege = scope:attacker
							change = scope:change
						}
					}
				}
			}
			
			scope:defender = {
				change_liege = {
					liege = scope:attacker
					change = scope:change
				}
			}
		}
		
		resolve_title_and_vassal_change = scope:change
		
		
		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = major_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = {
				value = major_prestige_value
			}
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = {
				value = major_prestige_value
			}
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes
				
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tribal_subjugation_cb_white_peace_desc_defender
			}
			desc = tribal_subjugation_cb_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}
		
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = tribal_subjugation_cb_white_peace_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = tribal_subjugation_cb_defeat_desc_attacker
			}
			desc = tribal_subjugation_cb_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige = {
				value = major_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		
		# Truce
		add_truce_attacker_defeat_effect = yes
		
		on_lost_aggression_war_discontent_loss = yes

	}
	
	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "SUBJUGATION_WAR_NAME"
	war_name_base = "SUBJUGATION_WAR_NAME_BASE"
	cb_name = "CLAN_SUBJUGATION_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 50000

}

dismantle_leader_cb = {
	icon = vassalization
	group = conquest

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		exists = scope:attacker.dynasty
		NOT = { scope:attacker.dynasty.dynast = scope:attacker }
		scope:attacker.dynasty = {
			has_dynasty_modifier = clannic_dynasty
		}
		scope:attacker.dynasty = {
			exists = var:clan_unity_value
		}
		scope:attacker.dynasty = {
			var:clan_unity_value < 15
		}
	}

	allowed_for_character_display_regardless = {
		prestige_level >= 2
	}

	allowed_against_character = {
		scope:attacker.dynasty.dynast = scope:defender
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	target_titles = all
	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	valid_to_start = {
		scope:target = {
			any_in_de_jure_hierarchy = {
				tier = tier_county
				neighboring_county_or_viking_conquest_trigger = { CHARACTER = root }
			}
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_religious_war_invalidation_region_message
	
	on_invalidated = {
	}

	cost = {
		prestige = 150
	}

	on_declaration = {
		on_declared_war = yes
	}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = county_conquest_cb_victory_desc_attacker
			}
			desc = county_conquest_cb_victory_desc
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		# go through the dejure hierarchy under target titles, transfer eligible vassals and sieze counties from ineligible ones
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE

			conquest_cb_title_transfer = {
				RELIGIOUS_WAR = no
			}
		}

		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}

		resolve_title_and_vassal_change = scope:change

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = medium_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
		
		scope:attacker = {
			destroy_title = scope:defender.primary_title
		}
		
		custom_description = {
			text = up_clan_value_by_ten
			scope:attacker.dynasty = {
				if = {
					limit = { exists = var:clan_unity_value }
					change_variable = {
						name = clan_unity_value
						add = 10
					}
				}
			}
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige = major_prestige_value
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = inherit
	on_primary_defender_death = invalidate

	attacker_allies_inherit = yes
	defender_allies_inherit = yes

	war_name = "DISMANTLE_CLAN_LEADER_WAR_NAME"
	war_name_base = "DISMANTLE_CLAN_LEADER_WAR_NAME_BASE"
	cb_name = "DISMANTLE_CLAN_LEADER_CB"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	attacker_wargoal_percentage = 0.8

}

# clan_war_invaision_cb = {
	# group = invasion

	# target_titles = all
	# target_title_tier = kingdom
	# target_de_jure_regions_above = yes
	# ignore_effect = change_title_holder
	# combine_into_one = yes
	# should_show_war_goal_subview = yes
	# mutually_exclusive_titles = { always = yes }

	# allowed_for_character = {
		# scope:attacker.dynasty = {
			# has_dynasty_modifier = clannic_dynasty
		# }
		# scope:attacker.dynasty = {
			# exists = var:clan_unity_value
		# }
		# scope:attacker = scope:attacker.dynasty.dynast
	# }

	# allowed_for_character_display_regardless = {
		# custom_description = {
			# text = clan_invasion_cooldown
			# NOT = {	scope:attacker.dynasty = { exists = var:variable_clan_invasion_cooldown }}
		# }
	# }

	# allowed_against_character = {
		# NOT = { scope:defender.dynasty = scope:attacker.dynasty }
		# is_independent_ruler = yes
	# }

	# valid_to_start = {
		# always = yes
	# }

	# should_invalidate = {
		# NOT = {
			# any_in_list = {
				# list = target_titles
				# any_in_de_jure_hierarchy = {
					# tier = tier_county
					# holder = {
						# target_is_same_character_or_above = scope:defender
					# }
				# }
			# }
		# }
	# }

	# on_invalidated_desc = msg_invasion_war_invalidated_message
	
	# on_invalidated = {
		
	# }

	# cost = {
		# prestige = 50
	# }
	
	# on_declaration = {
		# on_declared_war = yes
		
		# save_scope_as = war_to_join
		
		# every_in_list = {
			# list = target_titles
			# any_in_de_jure_hierarchy = {
				# tier = tier_duchy
				# add_to_list = duchies_gained
			# }
		# }
		
		# custom_description = {
			# text = all_clan_members_are_called_into_war
			# scope:attacker = {
				# trigger_event = {
					# id = toi_clan.0006
					# days = 1
				# }
			# }
		# }
		
		# scope:attacker = {
			# trigger_event = {
				# id = toi_clan.0007
				# days = 5
			# }
		# }
	# }	

	# on_victory_desc = {
		# first_valid = {
			# triggered_desc = {
				# trigger = { scope:attacker = { is_local_player = yes } }
				# desc = invasion_war_victory_desc_attacker
			# }
			# desc = clan_invasion_war_warning_desc
		# }
		# triggered_desc = {
			# trigger = { scope:attacker = { is_local_player = yes } }
			# desc = clan_invasion_war_warning_desc
		# }
	# }
	
	# on_victory = {
		# scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		# add_legitimacy_attacker_victory_effect = yes
		
		# #give leader his duchy
		# create_title_and_vassal_change = {
			# type = conquest
			# save_scope_as = change
			# add_claim_on_loss = yes
		# }
		
		# scope:duchy_chosen_leader = {
			# change_title_holder = {
				# holder = scope:attacker
				# change = scope:change
				# take_baronies = yes
			# }
			# remove_from_list = duchies_gained
		# }
		
		# resolve_title_and_vassal_change = scope:change
		
		# #give the others random duchies
		# this.war = {
			# every_war_attacker = {
				# limit = { NOT = { this = scope:attacker } }
				# save_scope_as = ruler_chosen
				
				# create_title_and_vassal_change = {
					# type = conquest
					# save_scope_as = change
					# add_claim_on_loss = yes
				# }
				
				# random_in_list = {
					# list = duchies_gained
					# change_title_holder = {
						# holder = scope:ruler_chosen
						# change = scope:change
						# take_baronies = yes
					# }
					# remove_from_list = duchies_gained
				# }
				
				# resolve_title_and_vassal_change = scope:change
			# }
		# }

		# # Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		# modify_all_participants_fame_values = {
			# WINNER = scope:attacker
			# LOSER = scope:defender
			# FAME_BASE = 100 # Set by 'setup_invasion_cb'
			# IS_RELIGIOUS_WAR = no
			# WINNER_FAME_SCALE = 10
			# LOSER_FAME_SCALE = -10
			# WINNER_ALLY_FAME_SCALE = 10
			# LOSER_ALLY_FAME_SCALE = 10
		# }

		# # Truce
		# add_truce_attacker_victory_effect = yes

		# # FP1: note the victory for future memorialisation via stele (if applicable).
		# scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	# }

	# on_white_peace_desc = {
		# first_valid = {
			# triggered_desc = {
				# trigger = { scope:defender = { is_local_player = yes } }
				# desc = invasion_war_white_peace_desc_defender
			# }
			# desc = invasion_war_white_peace_desc
		# }
	# }
	
	# on_white_peace = {
		# scope:attacker = { show_pow_release_message_effect = yes }

		# # Prestige for the attacker's war allies
		# add_from_contribution_attackers = {
			# prestige = major_prestige_value
			# opinion = {
				# modifier = contributed_in_war
			# }
		# }

		# # Prestige for the defender's war allies
		# add_from_contribution_defenders = {
			# prestige = major_prestige_value
			# opinion = {
				# modifier = contributed_in_war
			# }
		# }

		# # Truce
		# add_truce_white_peace_effect = yes

		# scope:attacker = {
			# add_prestige = mongol_invasion_cb_prestige_white_peace
			# stress_impact = {
				# ambitious = medium_stress_impact_gain
				# arrogant = medium_stress_impact_gain
			# }
		# }

		# scope:defender = {
			# stress_impact = {
				# arrogant = medium_stress_impact_gain
			# }
		# }
	# }

	# on_defeat_desc = {
		# first_valid = {
			# triggered_desc = {
				# trigger = { scope:defender = { is_local_player = yes } }
				# desc = invasion_war_white_peace_desc_defender
			# }
			# desc = invasion_war_white_peace_desc
		# }
	# }
	
	# on_defeat = {
		# scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		# add_legitimacy_attacker_defeat_effect = yes

		# # Prestige loss for the attacker
		# scope:attacker = {
			# pay_short_term_gold = {
				# gold = 5
				# target = scope:defender
				# yearly_income = yes
			# }
			# add_prestige = {
				# value = massive_prestige_value
				# multiply = -1.0
			# }
		# }

		# # Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		# modify_all_participants_fame_values = {
			# WINNER = scope:defender
			# LOSER = scope:attacker
			# FAME_BASE = 100 # Set by 'setup_claim_cb'
			# IS_RELIGIOUS_WAR = no
			# WINNER_FAME_SCALE = 10
			# LOSER_FAME_SCALE = -10
			# WINNER_ALLY_FAME_SCALE = 10
			# LOSER_ALLY_FAME_SCALE = 10
		# }
	
		# add_truce_attacker_defeat_effect = yes
		
		# scope:attacker = {
			# save_temporary_scope_as = loser
		# }
	# }
	
	# transfer_behavior = transfer
	
	# on_primary_attacker_death = inherit
	# on_primary_defender_death = inherit
	
	# attacker_allies_inherit = yes
	# defender_allies_inherit = yes
	
	# war_name = "CLAN_INVASION_WAR_NAME"
	# war_name_base = "CLAN_INVASION_WAR_NAME_BASE"
	# cb_name = "CLAN_INVASION_WAR_CB_NAME"
	
	# interface_priority = 100
	
	# use_de_jure_wargoal_only = yes
	
	# max_ai_diplo_distance_to_title = 50000
	
	# attacker_wargoal_percentage = 0.8
# }