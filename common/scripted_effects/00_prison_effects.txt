# the effect used in all ransom interactions
ransom_interaction_effect = {
	scope:prisoner = {
		add_character_flag = { #To make sure you don't get spammed about the release
			flag = block_for_prison_release_notification
			days = 1
		}
		if = { # no opinion if you ransomed yourself
			limit = { NOT = { this = scope:payer } }
			if = { #Only visible if a player is involved
				limit = {
					OR = {
						scope:prisoner = { is_ai = no }
						scope:payer = { is_ai = no }
					}
				}
				add_opinion = {
					modifier = ransomed_from_prison
					target = scope:payer
					years = 1
				}
			}
			else = {
				hidden_effect = {
					add_opinion = {
						modifier = ransomed_from_prison
						target = scope:payer
						years = 1
					}
				}
			}
		}
	}
	if = {
		limit = {
			always = scope:gold
		}
		scope:payer = {
			pay_short_term_gold = {
				gold = scope:prisoner.ransom_cost_value
				target = scope:imprisoner
			}
		}
	}
	if = {
		limit = {
			always = scope:current_gold
		}
		scope:payer = {
			pay_short_term_gold = {
				gold = scope:ransom_saved_gold_value # Calculated earlier in the ransom interaction.
				target = scope:imprisoner
			}
		}
	}
	if = {
		limit = {
			always = scope:favor
		}
		scope:imprisoner = {
			add_hook = {
				target = scope:payer
				type = favor_hook
			}
		}
	}
	scope:prisoner = {
		release_from_prison = yes
	}
}

#Used for all executions
execute_prisoner_effect = {

	$VICTIM$ = {
		save_scope_as = victim
	}

	$EXECUTIONER$ = {
		save_scope_as = executioner
		save_scope_as = imprisoner #Save this scope to show correct tyranny tooltip
	}

	show_as_tooltip = {
		$VICTIM$ = {
			death = {
				death_reason = death_execution
				killer = $EXECUTIONER$
			}
		}
	}

	scope:executioner = {
		if = {
			limit = {
				OR = {
					#is_spouse_of = scope:victim
					is_close_family_of = scope:victim
					scope:victim = { tier_or_related_liege_tier_greater_or_equal_trigger = { TIER = tier_kingdom } } #Kingdom & empire
				}
			}
			add_dread = major_dread_gain
		}
		else_if = {
			limit = {
				OR = {
					scope:victim = { tier_or_related_liege_tier_equal_trigger = { TIER = tier_duchy } }
					scope:victim = { tier_or_related_liege_tier_equal_trigger = { TIER = tier_county } }
				}
			}
			add_dread = medium_dread_gain
		}
		else = {
			add_dread = minor_dread_gain
		}
		# Piety loss (or gain) from executions
		if = {
			limit = {
				faith = {
					has_doctrine_parameter = human_sacrifice_active
				}
			}
			scope:victim = {
				if = {
					limit = {
						OR = {
							highest_held_title_tier >= tier_empire
							any_close_family_member = {
								highest_held_title_tier >= tier_empire
							}
						}
					}
					scope:executioner = { add_piety = massive_piety_gain }
				}
				else_if = {
					limit = {
						OR = {
							highest_held_title_tier >= tier_kingdom
							any_close_family_member = {
								highest_held_title_tier >= tier_kingdom
							}
						}
					}
					scope:executioner = { add_piety = major_piety_gain }
				}
				else_if = {
					limit = {
						OR = {
							highest_held_title_tier >= tier_duchy
							any_close_family_member = {
								highest_held_title_tier >= tier_duchy
							}
						}
					}
					scope:executioner = { add_piety = medium_piety_gain }
				}
				else_if = {
					limit = {
						OR = {
							is_ruler = yes
							is_lowborn = no
							any_close_family_member = {
								is_ruler = yes
							}
						}
					}
					scope:executioner = { add_piety = minor_piety_gain }
				}
				else = {
					scope:executioner = { add_piety = miniscule_piety_gain }
				}
			}
		}
		else_if = {
			limit = {
				faith = scope:victim.faith
				NOT = { has_perk = divine_retribution_perk }
			}
			add_piety = medium_piety_loss
		}
		# Stress loss		
		if = {
			limit = {
				has_trait = sadistic
			}
			stress_impact = {
				sadistic = medium_stress_impact_loss
			}
		}
		if = {
			limit = { #Killing infidels is relaxing
				has_trait = zealous
				NOT = { scope:executioner.faith = scope:victim.faith }
			}
			stress_impact = {
				zealous = minor_stress_impact_loss
			}
		}
		if = {
			limit = {
				has_relation_rival = scope:victim
			}
			add_prestige = medium_prestige_gain
			if = {
				limit = {
					NOR = {
						has_trait = vengeful
						has_trait = forgiving
					}
				}
				add_stress = major_stress_loss
			}
			else = {
				stress_impact = {
					vengeful = massive_stress_impact_loss
					forgiving = 0 #No stress reduction
				}
			}
			
		}
		#Kinslaying
		add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:victim }

		#Tyranny
		if = {
			limit = {
				exists = scope:recipient
				has_execute_reason = scope:victim
			}
			custom_tooltip = IS_ALLOWED_TO_EXECUTE_DESC
		}
		else_if = {
			limit = {
				OR = {
					AND = {
						has_execute_reason = scope:victim
						NOT = { exists = scope:recipient }
					}
					is_at_war_with = scope:victim
				}
			}
			custom_tooltip = IS_ALLOWED_TO_EXECUTE_NO_RECIPIENT_DESC
		}
		else_if = {
			limit = {
				scope:victim = {
					OR = {
						is_landed = no
						NOT = { is_of_major_or_minor_interest_trigger = { CHARACTER = scope:executioner } }
					}
				}
	   			scope:executioner.faith = {
	  				faith_hostility_level = {
	 					target = scope:victim.faith
						value > faith_astray_level
	 				}
				}
			}
			custom_tooltip = IS_ALLOWED_TO_EXECUTE_HOSTILE_RELIGION_DESC
		}
		else_if = {
			limit = {
				scope:victim = { target_is_liege_or_above = prev }
			}
			add_tyranny = execution_tyranny_gain
		}
		else_if = {
			limit = {
				scope:victim = {
					NOT = { exists = liege }
					exists = host
				}
				any_pool_guest = { count > 0 }
			}
			every_pool_guest = {
				limit = {
					NOR = {
						this = scope:victim
						is_in_list = guest_list
					}
				}
				add_to_temporary_list = guest_list
			}
			every_in_list = {
				list = guest_list
				custom = all_your_guests
				add_opinion = {
					target = prev
					modifier = executed_guest_modifier
				}
			}
		}
		else = {
			if = {
				limit = {
					exists = scope:victim.liege
					NOT = { scope:victim.liege = scope:victim }
				}
				scope:victim.liege = {
					add_opinion = {
						target = prev
						modifier = executed_my_countryman_modifier
					}
				}
			}
		}
	}

	execute_opinion_effect = { VICTIM = scope:victim EXECUTIONER = scope:executioner }

	#If you have the Human Sacrifice tenet, give victim an appropriate death reason
	hidden_effect = {
		if = {
			limit = {
				scope:executioner.faith = {
					has_doctrine = tenet_human_sacrifice
				}
			}
			$VICTIM$ = {
				death = {
					death_reason = death_sacrificed_to_gods
					killer = $EXECUTIONER$
				}
			}
		}
		else = {
			$VICTIM$ = {
				death = {
					death_reason = death_execution
					killer = $EXECUTIONER$
				}
			}
		}
	}
}


execute_opinion_effect = {
	$VICTIM$ = {
		# Victim's family & spouse hates executioner
		every_close_family_member = {
			limit = { NOT = { this = $EXECUTIONER$ } }
			add_to_temporary_list = victim_family_list
		}
		every_spouse = {
			limit = {
				NOR = {
					this = $EXECUTIONER$
					is_in_list = victim_family_list
				}
			}
			add_to_temporary_list = victim_family_list
		}
		
		if = {
			limit = {
				any_in_list = {
					list = victim_family_list
					count > 0
				}
			}
			if = {
				limit = {
					$EXECUTIONER$ = {
						has_execute_reason = $VICTIM$
					}
				}
				every_in_list = {
					list = victim_family_list
					custom = all_close_family_and_spouses
					add_opinion = {
						target = $EXECUTIONER$
						modifier = executed_close_family
					}
				}
			}
			else = {
				every_in_list = {
					list = victim_family_list
					custom = all_close_family_and_spouses
					add_opinion = {
						target = $EXECUTIONER$
						modifier = executed_close_family_crime
					}
				}
			}
		}

		# Victim's dynasty hates executioner
		if = {
			limit = {
				exists = dynasty
				exists = $EXECUTIONER$.dynasty
				NOT = { dynasty = $EXECUTIONER$.dynasty }
				NOT = {
					$EXECUTIONER$ = {
						has_execute_reason = $VICTIM$
					}
				}
			}
			dynasty = {
				every_dynasty_member = {
					limit = {
						NOR = {
							this = $VICTIM$
							is_in_list = victim_family_list
						}
					}
					custom = all_dynasty_members
					add_to_temporary_list = victim_dynasty_list
					add_opinion = {
						target = $EXECUTIONER$
						modifier = executed_dynasty_member
					}
				}
			}
		}
		
		# Victim's friends and lovers
		every_relation = {
			type = friend
			limit = {
				NOR = {
					this = $VICTIM$
					is_in_list = victim_family_list
					is_in_list = victim_dynasty_list
				}
			}
			add_to_list = victim_close_relations_list
		}
		every_relation = {
			type = lover
			limit = {
				NOR = {
					this = $VICTIM$
					is_in_list = victim_family_list
					is_in_list = victim_dynasty_list
					is_in_list = victim_close_relations_list
				}
			}
			add_to_list = victim_close_relations_list
		}
		if = {
			limit = {
				any_in_list = {
					list = victim_close_relations_list
					always = yes
				}
			}
			every_in_list = {
				list = victim_close_relations_list
				custom = all_friends_and_lovers
				add_opinion = {
					target = $EXECUTIONER$
					modifier = executed_close_relation_opinion
				}
			}
		}
	}
}


#Used for religious sacrifice
sacrifice_prisoner_effect = {

	$VICTIM$ = {
		save_scope_as = victim
	}

	$EXECUTIONER$ = {
		save_scope_as = executioner
	}

	scope:executioner = {
		if = {
			limit = {
				OR = {
					#is_spouse_of = scope:victim
					is_close_family_of = scope:victim
					scope:victim = { tier_or_related_liege_tier_greater_or_equal_trigger = { TIER = tier_kingdom } } #Kingdom & empire
				}
			}
			add_dread = major_dread_gain
		}
		else_if = {
			limit = {
				OR = {
					scope:victim = { tier_or_related_liege_tier_equal_trigger = { TIER = tier_duchy } }
					scope:victim = { tier_or_related_liege_tier_equal_trigger = { TIER = tier_county } }
				}
			}
			add_dread = medium_dread_gain
		}
		else = {
			add_dread = minor_dread_gain
		}
		if = {
			limit = {
				faith = scope:victim.faith
				NOT = {
					scope:executioner.faith = {
						has_doctrine_parameter = human_sacrifice_active
					}
				}
			}
			add_piety = minor_piety_loss
		}
		else_if = {
			limit = {
				scope:executioner.faith = {
					has_doctrine_parameter = human_sacrifice_active
				}
			}
			if = {
				limit = {
					scope:victim = {
						highest_held_title_tier = 5
					}
				}
				add_piety = massive_piety_gain
			}
			else_if = {
				limit = {
					scope:victim = {
						highest_held_title_tier = 4
					}
				}
				add_piety = major_piety_gain
			}
			else_if = {
				limit = {
					scope:victim = {
						highest_held_title_tier = 3
					}
				}
				add_piety = medium_piety_gain
			}
			else_if = {
				limit = {
					scope:victim = {
						highest_held_title_tier = 2
					}
				}
				add_piety = minor_piety_gain
			}
			else_if = {
				limit = {
					scope:victim = {
						highest_held_title_tier = 1
					}
				}
				add_piety = miniscule_piety_gain
			}
		}
		# Stress loss
		if = {
			limit = {
				has_trait = sadistic
			}
			stress_impact = {
				sadistic = medium_stress_impact_loss
			}
		}
		if = {
			limit = { #Killing infidels is relaxing
				has_trait = zealous
				NOT = { scope:executioner.faith = scope:victim.faith }
				NOT = {
					scope:executioner.faith = {
						has_doctrine_parameter = human_sacrifice_active
					}
				}
			}
			stress_impact = {
				zealous = minor_stress_impact_loss
			}
		}
		if = {
			limit = { #Even more so if the religion is in favor of doing it.
				has_trait = zealous
				NOT = { scope:executioner.faith = scope:victim.faith }
				scope:executioner.faith = {
					has_doctrine_parameter = human_sacrifice_active
				}
			}
			stress_impact = {
				zealous = medium_stress_impact_loss
			}
		}
		if = {
			limit = {
				has_relation_rival = scope:victim
			}
			add_prestige = medium_prestige_gain
			if = {
				limit = {
					NOR = {
						has_trait = vengeful
						has_trait = forgiving
					}
				}
				add_stress = major_stress_loss
			}
			else = {
				stress_impact = {
					vengeful = massive_stress_impact_loss
					forgiving = 0 #No stress reduction
				}
			}
		}
		#Kinslaying
		add_kinslayer_trait_or_nothing_effect = { VICTIM = scope:victim }
	}

	execute_opinion_effect = { VICTIM = scope:victim EXECUTIONER = scope:executioner }

	$VICTIM$ = {
		death = {
			death_reason = death_sacrificed_to_gods
			killer = $EXECUTIONER$
		}
	}
}


imprison_character_effect = {
	$TARGET$ = { save_scope_as = imprisonment_target }
	$IMPRISONER$ = { save_scope_as = imprisoner }
	
	scope:imprisonment_target = {
		add_opinion = {
			target = scope:imprisoner
			modifier = imprisoned_me
		}
	}

	if = {
		limit = {
			scope:imprisonment_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}
		
		scope:imprisoner = {
			imprison = {
				target = scope:imprisonment_target
				type = house_arrest
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
					hidden_effect = {
						every_close_or_extended_family_member = {
							limit = {
								NOT = { scope:imprisoner = this }
							}
							add_opinion = {
								modifier = imprisoned_family_member
								target = scope:imprisoner
							}
						}
					}
				}
			}
		}
	}
		
	else = {
		scope:imprisoner = {
			imprison = {
				target = scope:imprisonment_target
				type = dungeon
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
					hidden_effect = {
						every_close_or_extended_family_member = {
							limit = {
								NOT = { scope:imprisoner = this }
							}
							add_opinion = {
								modifier = imprisoned_family_member_dungeon
								target = scope:imprisoner
							}
						}
					}
				}
			}
		}
	}
			
	scope:imprisoner = {
		imprison_tyranny_effect = yes
	}

	#Disband any scheme you have against them
	scope:imprisoner = {
		if = {
			limit = {
				any_scheme = {
					scheme_target = scope:imprisonment_target
				}
			}
			every_scheme = {
				limit = {
					scheme_target = scope:imprisonment_target
				}
				end_scheme = yes
			}
		}
	}

	#Send break up event if they are your lover
	scope:imprisoner = {
		if = {
			limit = {
				has_relation_lover = scope:imprisonment_target
				NOT = { has_relation_rival = scope:imprisonment_target } #To enable really strange love stories
			}
			scope:imprisonment_target = {
				trigger_event = {
					id = lover.0101
					days = { 14 30 }
				}
			}
		}
	}

	#Remove them as guardian/ward for any courtiers and give feedback about this
	scope:imprisoner = {
		if = {
			limit = {
				any_courtier = {
					has_relation_guardian = scope:imprisonment_target
				}
			}
			every_courtier = {
				limit = {
					has_relation_guardian = scope:imprisonment_target
				}
				save_scope_as = ward

				scope:imprisoner = {
					send_interface_message = {
						type = event_generic_neutral
						title = remove_guardian_interaction_notification
						left_icon = scope:imprisonment_target
						right_icon = scope:ward

						scope:imprisonment_target = { remove_relation_ward = scope:ward }
						scope:ward = {
							if = {
								limit = {
									NOT = { host = liege }
								}
								return_to_court = yes
							}
							guardian_remove_opinion_effect = {
								GUARDIAN = scope:imprisonment_target
								WARD = this
								WARD_LIEGE = scope:imprisoner
							}
						}
					}
				}
			}
		}
		
		if = {
			limit = {
				any_courtier = {
					has_relation_ward = scope:imprisonment_target
				}
			}
			random_courtier = {
				limit = {
					has_relation_ward = scope:imprisonment_target
				}
				save_scope_as = guardian
				scope:imprisoner = {
					send_interface_message = {
						type = event_generic_neutral
						title = remove_guardian_interaction_notification
						left_icon = scope:imprisonment_target
						right_icon = scope:guardian

						scope:imprisonment_target = {
							send_interface_message = {
								type = event_generic_neutral
								title = remove_guardian_interaction_notification
								left_icon = scope:imprisonment_target
								right_icon = scope:guardian

								scope:guardian = {
									remove_relation_ward = scope:imprisonment_target
									if = {
										limit = {
											NOT = { host = liege }
										}
										return_to_court = yes
									}
									guardian_remove_opinion_effect = {
										GUARDIAN = this
										WARD = scope:imprisonment_target
										WARD_LIEGE = scope:imprisoner
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

imprison_character_effect_ignore_reason = {
	$TARGET$ = { save_temporary_scope_as = imprisonment_target }
	$IMPRISONER$ = { save_temporary_scope_as = imprisoner }
	

	if = {
		limit = {
			scope:imprisonment_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}
		
		scope:imprisoner = {
			imprison = {
				target = scope:imprisonment_target
				type = house_arrest
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
				}
			}
		}
	}
		
	else = {
		scope:imprisoner = {
			imprison = {
				target = scope:imprisonment_target
				type = dungeon
			}
			scope:imprisonment_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
				}
			}
		}
	}
			
	scope:imprisoner = {
		add_tyranny = imprisonment_tyranny_gain
	}
	
	scope:imprisonment_target = {
		add_opinion = {
			target = scope:imprisoner
			modifier = imprisoned_me
		}
	}

	#Disband any scheme you have against them
	scope:imprisoner = {
		if = {
			limit = {
				any_scheme = {
					scheme_target = scope:imprisonment_target
				}
			}
			every_scheme = {
				limit = {
					scheme_target = scope:imprisonment_target
				}
				end_scheme = yes
			}
		}
	}

	#Send break up event if they are your lover
	scope:imprisoner = {
		if = {
			limit = {
				has_relation_lover = scope:imprisonment_target
				NOT = { has_relation_rival = scope:imprisonment_target } #To enable really strange love stories
			}
			scope:imprisonment_target = {
				trigger_event = {
					id = lover.0101
					days = { 14 30 }
				}
			}
		}
	}
}



hard_imprison_character_effect = {
	$TARGET$ = { save_temporary_scope_as = new_target }
	$IMPRISONER$ = { save_temporary_scope_as = new_imprisoner }

	scope:new_imprisoner = {
		imprison = {
			target = scope:new_target
			type = house_arrest
		}
	}

	hidden_effect = {
		#Disband any scheme you have against them
		scope:new_imprisoner = {
			if = {
				limit = {
					any_scheme = {
						scheme_target = scope:new_target
					}
				}
				every_scheme = {
					limit = {
						scheme_target = scope:new_target
					}
					end_scheme = yes
				}
			}
		}

		#Send break up event if they are your lover
		scope:new_imprisoner = {
			if = {
				limit = {
					has_relation_lover = scope:new_target
					NOT = { has_relation_rival = scope:new_target } #To enable really strange love stories
				}
				scope:new_target = {
					trigger_event = {
						id = lover.0101
						days = { 14 30 }
					}
				}
			}
		}
	}
}

#Exactly the same as imprison_character_effect, except it never adds tyranny
#USE THIS SPARINGLY. READ ME: It is usually better to set an opinion with an imprisonment reason for "custom situations". For cases where there is a "standard imprisonment reason", such as for murder, but that imprisonment reason set before this script has to be executed, double-check that the imprisonment you're doing is actually rightful.
rightfully_imprison_character_effect = {
	$TARGET$ = { save_scope_as = new_target }
	$IMPRISONER$ = { save_scope_as = imprisoner }
	

	if = {
		limit = {
			scope:new_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}
		
		scope:imprisoner = {
			imprison = {
				target = scope:new_target
				type = house_arrest
			}
			scope:new_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_HOUSE_ARREST
				}
			}
		}
	}
		
	else = {
		scope:imprisoner = {
			imprison = {
				target = scope:new_target
				type = dungeon
			}
			scope:new_target = {
				if = {
					limit = {
						any_close_or_extended_family_member = {
							NOT = { scope:imprisoner = this }
						}
					}
					custom_tooltip = IMPRISONMENT_RELATIVES_EFFECT_DUNGEON
				}
			}
		}
	}
			
	scope:imprisoner = {
		if = {
			limit = { exists = scope:recipient }
			custom_tooltip = IS_ALLOWED_TO_IMPRISON_DESC
		}
		else = {
			custom_tooltip = IS_ALLOWED_TO_IMPRISON_NO_RECIPIENT_DESC
		}
	}
	
	scope:new_target = {
		add_opinion = {
			target = scope:imprisoner
			modifier = imprisoned_me
		}
	}

	#Disband any scheme you have against them
	scope:imprisoner = {
		if = {
			limit = {
				any_scheme = {
					scheme_target = scope:new_target
				}
			}
			every_scheme = {
				limit = {
					scheme_target = scope:new_target
				}
				end_scheme = yes
			}
		}
	}

	#Send break up event if they are your lover
	scope:imprisoner = {
		if = {
			limit = {
				has_relation_lover = scope:new_target
				NOT = { has_relation_rival = scope:new_target } #To enable really strange love stories
			}
			scope:new_target = {
				trigger_event = {
					id = lover.0101
					days = { 14 30 }
				}
			}
		}
	}
}

# A lite version of imprison_character_effect without opinion penalties or other consequences (as they were captured in war, not at your command)
prisoner_of_war_capture_effect = {
	$TARGET$ = { save_temporary_scope_as = new_target }
	$IMPRISONER$ = { save_temporary_scope_as = imprisoner }
	
	if = {
		limit = {
			scope:new_target = {
				exists = liege
				OR = {
					is_landed = yes
					is_close_or_extended_family_of = liege
					is_spouse_of = liege
				}
			}
		}
		
		scope:imprisoner = {
			imprison = {
				target = scope:new_target
				type = house_arrest
			}
		}
	}		
	else = {
		scope:imprisoner = {
			imprison = {
				target = scope:new_target
				type = dungeon
			}
		}
	}
}

#An effect that picks imprison_character_effect or rightfully_imprison_character_effect as punishment for a sexual relationship, good to not show tyranny tooltip if imprisonment reason hasn't been set yet. But this should NEVER be used if the imprisonment reason isn't going to be set by the same piece of content.
pick_imprisonment_effect_based_on_sexual_relation_effect = {
	if = {
		limit = {
			$TARGET$ = {
				sexual_activity_with_partner_is_criminal_in_faith_trigger = {
					PARTNER = $PARTNER$
					FAITH = $IMPRISONER$.faith
				}
			}
		}
		rightfully_imprison_character_effect = {
			TARGET = $TARGET$
			IMPRISONER = $IMPRISONER$
		}
	}
	else = {
		imprison_character_effect = {
			TARGET = $TARGET$
			IMPRISONER = $IMPRISONER$
		}
	}
}

prison_pet_death_effect = {
	if = {
		limit = {
			var:prison_pet_variable = flag:rat
		}
		remove_character_modifier = prison_pet_rat_modifier
	}
	else_if = {
		limit = {
			var:prison_pet_variable = flag:stone
		}
		remove_character_modifier = prison_pet_stone_modifier
	}
	else_if = {
		limit = {
			var:prison_pet_variable = flag:spoon
		}
		remove_character_modifier = prison_pet_stone_modifier
	}
	else_if = {
		limit = {
			var:prison_pet_variable = flag:cockroach
		}
		remove_character_modifier = prison_pet_cockroach_modifier
	}
	remove_variable = prison_pet_variable
}

consume_all_criminal_reasons_effect = {
	$LIEGE$ = {
		if = {
			limit = {
				has_imprisonment_reason = $CRIMINAL$
			}
			consume_imprisonment_reasons = $CRIMINAL$
		}
		if = {
			limit = {
				has_banish_reason = $CRIMINAL$
			}
			consume_banish_reasons = $CRIMINAL$
		}
		if = {
			limit = {
				has_execute_reason = $CRIMINAL$
			}
			consume_execute_reasons = $CRIMINAL$
		}
		if = {
			limit = {
				has_revoke_title_reason = $CRIMINAL$
			}
			consume_revoke_title_reason = $CRIMINAL$
		}
	}
}

escape_from_prison_effect = {
	play_music_cue = "mx_cue_sacredrite"
	scope:imprisoner = {
		capital_province = {
			save_scope_as = background_wilderness_scope
		}
	}
	add_character_flag = { #To make sure you don't get spammed about the release
		flag = block_for_prison_release_notification
		days = 1
	}
	release_from_prison = yes
	random_dummy_gender_soldier_effect = { SCOPE_NAME = dummy_gender }
	hidden_effect = {
		remove_decision_cooldown = escape_from_prison_decision
	}
}

#Are you unjustly trying to imprison your bishop? tut-tut
imprison_court_chaplain_consequences_effect = {
	if = {
		limit = {
			scope:actor = { NOT = { has_imprisonment_reason = scope:recipient } }
			scope:recipient = { has_council_position = councillor_court_chaplain }
		}
		if = { #Can I fire them?
			limit = {
				scope:recipient = { can_be_fired_from_council_trigger = { COURT_OWNER = scope:actor } }
			}
			scope:actor = { fire_councillor = scope:recipient }
		}
		scope:actor = {
			add_piety_level = -1
		}
		if = {
			limit = {
				exists = scope:actor.faith.religious_head
			}
			scope:actor.faith.religious_head = {
				add_opinion = {
					target = scope:actor
					modifier = respect_opinion
					opinion = -30
				}
			}
		}
	}
}

#You're trying to imprison your HoF? Oh boy
imprison_HoF_consequences_effect = {
	if = {
		limit = {
			scope:actor = {
				NOT = { has_imprisonment_reason = scope:recipient }
				exists = faith.religious_head
				faith.religious_head = scope:recipient
			}
		}
		scope:actor = {
			add_piety_level = -1
		}
	}
	scope:actor = { add_piety = medium_piety_loss }
}

imprison_tyranny_effect = {
	if = {
		limit = {
			exists = scope:recipient
			OR = {
				AND = {
					exists = scope:imprisonment_target
					has_imprisonment_reason = scope:imprisonment_target
				}
				AND = {
					exists = scope:actor
					has_imprisonment_reason = scope:actor
				}
			}
		}
		custom_tooltip = IS_ALLOWED_TO_IMPRISON_DESC
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					exists = scope:imprisonment_target
					has_imprisonment_reason = scope:imprisonment_target
					NOT = { exists = scope:recipient }
				}
				AND = { 
					exists = scope:imprisonment_target
					is_at_war_with = scope:imprisonment_target
				}
				AND = {
					exists = scope:actor
					has_imprisonment_reason = scope:actor
					NOT = { exists = scope:recipient }
				}
				AND = { 
					exists = scope:actor
					is_at_war_with = scope:actor
				}
			}
		}
		custom_tooltip = IS_ALLOWED_TO_IMPRISON_NO_RECIPIENT_DESC
	}
	else = {
		add_tyranny = imprisonment_tyranny_gain
	}
}