reclaim_britannia_decision_effect = {
	#nothing
}

restore_the_danelaw_effect = {
	#nothing
}
embrace_english_culture_effect = {
	#nothing
}

form_portugal_decision_effects = {
	#nothing	
}

unite_the_spanish_thrones_decision_effects = {
	#nothing
}

unite_africa_decision_effects = {
	#nothing
}

avenge_the_battle_of_tours_decision_effects = {
	#nothing
}

unite_the_western_slavs_decision_effects = {
	#nothing
}

unite_the_southern_slavs_decision_effects = {
	#nothing
}

unite_the_slavs_decision_effects = {
	#nothing
}

unite_india_decision_effect = {
	#nothing
}

build_grand_church_decision_effect = {
	#nothing
}

accept_cannibalism_decision_effect = {
	custom_tooltip = faith_accept_cannibalism
	root.faith = {
		set_variable = {
			name = accepted_cannibalsim
			value = yes
		}
	}
	root = {
		if = {
			limit = {
				any_spouse = {
					is_cannibal_trigger = no
					is_ai = yes
				}
			}
			every_spouse = {
				limit = {
					is_cannibal_trigger = no
					is_ai = yes
				}
				add_trait = cannibal
			}
		}
		if = {
			limit = {
				any_close_family_member = {
					is_cannibal_trigger = no
					is_landed = no
					is_ai = yes
				}
			}
			every_close_family_member = {
				limit = {
					is_cannibal_trigger = no
					is_landed = no
					is_ai = yes
				}
				custom = all_my_family_members
				add_trait = cannibal
			}
		}
		if = {
			limit = {
				any_vassal = {
					is_cannibal_trigger = no
					is_ai = yes
					dread_modified_ai_boldness = { #all vassals that are intimidated
						dreaded_character = root
						value <= -50
					}
				}
			}
			every_vassal = {
				limit = {
					is_cannibal_trigger = no
					is_ai = yes
					dread_modified_ai_boldness = {
						dreaded_character = root
						value <= -50
					}
				}
				custom = all_my_intimidated_vassals
				add_trait = cannibal
			}
		}
	}
	give_nickname = nick_the_devourer
}

found_university_decision_event_effect = {
	#nothing
}

found_university_decision_effect = {
	#nothing
}

lunatic_building_decision_effect = {
	#nothing
}

found_witch_coven_decision_effects = {
	save_scope_as = founder
	custom_tooltip = found_witch_coven_decision_effects.children.tt
	custom_tooltip = found_witch_coven_decision_effects.convert.tt
	custom_tooltip = found_witch_coven_decision_effects.grand_rite.tt
	house = {
		add_house_modifier = {
			modifier = witch_coven
		}
	}
}

convert_whole_realm_to_feudalism_effect = {
	#TOOLTIP INFO
	#PLAYER EFFECTS
	##Liege has clan? Convert to clan!
	if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = clan_government }
		}
		change_government = clan_government
	}
	##Liege has feudal? Convert to feudal!
	else_if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = feudal_government }
		}
		change_government = feudal_government
	}
	##You're an independent anything else? Convert to feudal!
	else = { change_government = feudal_government }
	##General
	custom_tooltip = all_holding_will_change
	##Liege has clan? Convert to clan!
	if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = clan_government }
		}
		custom_tooltip = clan_liege_vassals_will_convert
	}
	#Liege has feudal? Convert to feudal!
	if = {
		limit = {
			is_independent_ruler = no
			liege = { has_government = feudal_government }
		}
		custom_tooltip = feudal_liege_vassals_will_convert
	}
	##If I am not Islamic, we will become feudal.
	else_if = {
		limit = { is_independent_ruler = yes }
		custom_tooltip = other_vassals_will_convert
	}

	##Sort out new laws.
	hidden_effect = {
		every_realm_province = {
			limit = { has_holding_type = tribal_holding }
			set_holding_type = city_holding
		}
		#Nuke tribal authorities.
		if = {
			limit = { has_realm_law = tribal_authority_0 }
			remove_realm_law = tribal_authority_0
		}
		if = {
			limit = { has_realm_law = tribal_authority_1 }
			remove_realm_law = tribal_authority_1
		}
		if = {
			limit = { has_realm_law = tribal_authority_2 }
			remove_realm_law = tribal_authority_2
		}
		if = {
			limit = { has_realm_law = tribal_authority_3 }
			remove_realm_law = tribal_authority_3
		}
		#Start off crown authorities.
		if = {
			limit = {
				NOT = { has_realm_law = crown_authority_0 }
			}
			add_realm_law_skip_effects = crown_authority_0
		}
	}

	#VASSAL EFFECTS
	#Also convert every vassal.
	hidden_effect = {
		#Liege has taken clan, so become clan.
		if = {
			limit = {
				has_government = clan_government
			}
			every_vassal = {
				limit = { has_government = tribal_government }
				change_government = clan_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_0 }
					}
					add_realm_law_skip_effects = crown_authority_0
				}
			}
		}
		#Liege is not clan, become feudal.
		else = {
			every_vassal = {
				limit = { has_government = tribal_government }
				change_government = feudal_government
				#Nuke tribal authorities.
				if = {
					limit = { has_realm_law = tribal_authority_0 }
					remove_realm_law = tribal_authority_0
				}
				if = {
					limit = { has_realm_law = tribal_authority_1 }
					remove_realm_law = tribal_authority_1
				}
				if = {
					limit = { has_realm_law = tribal_authority_2 }
					remove_realm_law = tribal_authority_2
				}
				if = {
					limit = { has_realm_law = tribal_authority_3 }
					remove_realm_law = tribal_authority_3
				}
				if = {
					limit = {
						NOT = { has_realm_law = crown_authority_0 }
					}
					add_realm_law_skip_effects = crown_authority_0
				}
			}
		}
	}
}

special_succession_witengamot_effect = {
}

special_succession_thing_effect = {
}

special_succession_tanistry_effect = {
}

launch_hungarian_migration_scripted_effect = {
}