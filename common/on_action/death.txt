# character just about to die in root scope
# if a killer is know, it's set as scope:killer
#Triggered by code

on_death = {
	effect = {
##TALES OF IRELAND
		if = {
			limit = {
				AND = {
					is_independent_ruler = yes
					has_realm_law = ancient_partition_succession_law
				}
			}
			every_heir = {
				add_character_flag = {
					flag = independent_when_died
					days = 25
				}
			}
		}
		else = {
			if = {
				limit = {
					has_realm_law = ancient_partition_succession_law
				}
				every_heir = {
					add_character_flag = {
						flag = not_independent_when_died
						days = 25
					}
				}
			}
			if = {
				limit = {
					AND = {
						any_held_title = {
							count > 1
							this.tier = root.highest_held_title_tier
						}
						has_realm_law = ancient_partition_succession_law
					}
				}
				every_heir = {
					add_character_flag = {
						flag = not_independent_when_died_multiple_titles
						days = 25
					}
				}
			}
			if = {
				limit = {
					exists = root.top_liege
					root.top_liege = {
						highest_held_title_tier = 5
					}
				}
				remove_character_flag = not_independent_when_died
				remove_character_flag = not_independent_when_died_multiple_titles
			}
		}
###TALES OF IRELAND END
		play_music_cue = "mx_cue_death"

		add_character_flag = { flag = about_to_die_but_not_dead_yet_flag } # Used in perk calc

		if = {
			limit = {
				exists = player_heir
			}
			player_heir = {
				apply_hold_court_grace_effect = yes
			}
			if = {
				limit = {
					is_ai = no
				}
				player_heir = {
					add_character_flag = {
						flag = tutorial_reactive_advice_succession
					}
				}
				if = {
					limit = {
						has_royal_court = yes
						any_sponsored_inspiration = { count >= 1 }
					}
					save_scope_as = old_ruler
					every_sponsored_inspiration = { add_to_list = inherited_inspiration_list }
					player_heir = {
						trigger_event = { id = fund_inspiration.9005 days = 5 }
					}
				}
			}
			if = {
				limit = {
					has_character_flag = undertaking_hungarian_migration
				}
				player_heir = {
					add_character_flag = {
						flag = undertaking_hungarian_migration
					}
				}
			}
		}
		
		if = { # Lower Grandeur a little bit on death
			limit = {
				has_royal_court = yes
				exists = primary_heir
				primary_heir = {
					has_royal_court = no
				}
			}
			change_current_court_grandeur = grandeur_loss_on_succession_value
		}
		
		if = { # Grandeur in elective realms
			limit = {
				has_royal_court = yes
				exists = primary_heir
				primary_heir = {
					has_royal_court = no
				}
				primary_title = {
					has_order_of_succession = election
				}
			}
			primary_heir = {
				set_variable = {
					name = previous_holder_grandeur_value
					value = prev.court_grandeur_current
				}
			}
		}

		invalidate_claimant_factions_on_death_effect = yes
	}
	events = {
		death_management.0096	# Updates marriage opinions of other spouses if relevant.
		death_management.0097	# Sets a flag if the dead one was someone you loved (to make suicide available)
		death_management.0098 	# Removes rejected_from_marriage_bed_modifier if spouse dies
		death_management.0099 	# If spouse is pregnant, save as variable
		death_management.0001 	# Finds characters which would care about death for notifications etc.
		intrigue_dread.4012		# Interrupts this event chain for the imprisoner when their prisoner dies.
		stewardship_duty.1065 	# Removes the patron buff from their employer when this character dies.
		stewardship_duty.1067 	# When you die removes your clients fron your court.
		religious_decision.0301 # ancestor died and needs to be buried.
		religious_decision.0311 # Dynasty member has died and you can raise a runestone
		game_rule.2				# Exclave Independence
		martial_authority.2057	# Right-Hand Person Dies 
		martial_authority.2055  # Right-handed Person (person with right-hand) Died
	}
}

# Root = character
# Triggered when someone is about to die from a natural death but is given a second chance by meeting
# the has_natural_death_second_chance scripted rule
on_natural_death_second_chance = {
	effect = {
		add_character_flag = {
			flag = know_thyself_perk_delay_period
			days = 390
		}
		add_character_flag = know_thyself_has_triggered_delay
		trigger_event = death_management.9998
		trigger_event = {
			id = death_management.9999
			days = { 340 380 }
		}
	}
}
